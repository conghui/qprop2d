##
 # 3D forward modeling
 ##

from rsf.proj import *
import fdmod
import math

# ------------------------------------------------------------
par = {
    # make sure nt,dt is the same in oneshot.H
    'nt':1500, 'ot':0, 'dt':0.004, 'lt':'t', 'ut':'s',
    'nx':400, 'ox':0, 'dx':0.032,  'lx':'x', 'ux':'km',
    'ny':400, 'oy':0, 'dy':0.032,  'ly':'y', 'uy':'km',
    'nz':400, 'oz':0, 'dz':0.032,  'lz':'z', 'uz':'km',
    'kt':80,
    'jsnap':100,
    'nb':10,
    'frq':20
    }
fdmod.param(par)

# ------------------------------------------------------------
# source/receiver coordinates
# ------------------------------------------------------------
par['xsou']=2.5
par['ysou']=1.9
par['zsou']=par['oz']
fdmod.point3d('ss-3d',par['xsou'],par['ysou'],par['zsou'],par)

Flow('tt_', None, 'math n1=70 o1=2.6 d1=0.05 n2=1 o2=1.9 d2=0.025 output=0')
Flow('tt_z', 'tt_', 'math output=0')
Flow('tt_x', 'tt_', 'math output=x1')
Flow('tt_y', 'tt_', 'math output=1.9')
Flow('rr-3d', ['tt_x', 'tt_y', 'tt_z'], '''
    cat axis=3 space=n ${SOURCES[1]} ${SOURCES[2]} |
    transp plane=12 | transp plane=13 |
    put o1= o2= o3= d1= d2= d3= label1="(x,y,z)" label2="count" n2=%d n3=1''' % (70*1))

# ------------------------------------------------------------
# wavelet
fdmod.wavelet('wav_',par['frq'],par)
Flow(  'wav','wav_','transp')
Result('wav','transp |' + fdmod.waveplot(''+par['labelrot2'],par))

# ------------------------------------------------------------
# velocity
Flow('vel-3d',None,
     '''
     math output=2
     n1=%(nz)d o1=%(oz)g d1=%(dz)g
     n2=%(nx)d o2=%(ox)g d2=%(dx)g
     n3=%(ny)d o3=%(oy)g d3=%(dy)g |
     put label1=%(lz)s label2=%(lx)s unit1=%(uz)s unit2=%(ux)s label3=%(ly)s unit3=%(uy)s
     ''' %par)

# 3D acoustic modeling
Flow(['dd-3d', 'ww-3d', 'minT'],['wav', 'vel-3d','ss-3d', 'rr-3d', 'times'],
    '''../bin/test ompchunk=%(ompchunk)d ompnth=%(ompnth)d cden=y
            verb=y free=n snap=%(snap)s jsnap=%(jsnap)d jdata=%(jdata)d
            nb=%(nb)d dabc=%(dabc)s timeblocks=20
            vel=${SOURCES[1]} sou=${SOURCES[2]} rec=${SOURCES[3]} wfl=${TARGETS[1]}
            times=${SOURCES[4]} minT=${TARGETS[2]}
    ''' % par)

End()
